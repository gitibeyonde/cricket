package com.golconda.game;

import java.io.Serializable;

public class GameType
    implements Serializable {

  //Poker moves
  public static final int Play_Holdem = 1;
  public static final int Play_OmahaHi = 2;
  public static final int Play_OmahaHiLo = 4;
  public static final int Play_Stud = 8;

  //
  public static final int Play_StudHiLo = 16;
  public static final int HoldemTourny = 32;
  public static final int HoldemSitnGo = 64;
  public static final int OmahaHiSitnGo = 128;

  //
  public static final int Real_Holdem = 256;
  public static final int Real_OmahaHi = 512;
  public static final int Real_OmahaHiLo = 1024;
  public static final int Real_Stud = 2048;

  //
  public static final int Real_StudHiLo = 4096;
  public static final int Jackpot_Holdem = 8192;
  public static final int U2 = 16384;
  public static final int U3 = 32768;

  //Bingo
  public static final int Blackjack = 65536;
  public static final int Real_Blackjack = 131072;
  public static final int Casino = 262144;
  public static final int Real_Casino = 524288;

  public static final int Bingo = 1048576;
  public static final int U10 = 2097152;


  public static final int POKER = 0xFFFF;
  public static final int REAL_POKER = 0x3FE0;
  public static final int PLAY_POKER = 0x001F;

  public static final int BLACKJACK = 0x30000;
  public static final int CASINO = 0xC0000;

  public static final int BINGO = 0x10000;

  private static String[] strings = new String[] {
      "Play-Holdem", "Play-OmahaHi", "Play-OmahaHiLo", "Play-StudHi",
      "Play-StudHiLo","HoldemTourny", "HoldemSitnGo", "OmahaSitnGo",
      "Real-Holdem", "Real-OmahaHi", "Real-OmahaHiLo", "Real-StudHi",
      "Real-StudHiLo", "u1", "u2", "u3",
      "Blackjack", "Real_Blackjack", "Casino", "Real_Casino",
      "Bingo", "u1", "u2", "u3",
      "u4", "u5", "u6", "u7",
      "u4", "u5", "u6", "u7"
  };

  static int[] values = new int[] {
      1, 2, 4, 8,
      16, 32, 64, 128,
      256, 512, 1024, 2048,
      4096, 8192, 16384, 32768,
      65536, 131072, 262144, 524288,
      1048576, 2097152, 4194304, 8388608,
      16777216, 33554432, 67108864, 134217728,
      268435456, 536870912, 1073741824

  };

  public static boolean isReal(int gameType) {
  	return ((gameType & REAL_POKER) == gameType)?true:false;
  }

  public static boolean isPlay(int gameType) {
  	return ((gameType & PLAY_POKER) == gameType)?true:false;
  }

  private int intVal;

  public GameType(int intVal) {
    this.intVal = intVal;
  }

  public String toString() {
    StringBuffer buf = new StringBuffer();
    for (int i = 0; i < values.length; i++) {
      if (intVal == values[i]) {
        return strings[i];
      }
      else if ( (intVal & values[i]) == values[i]) {
        buf.append(strings[i]).append("|`");
      }
    }
    if (buf.length() == 0) {
      throw new IllegalArgumentException("Invalid GameType : " + intVal);
    }
    return buf.deleteCharAt(buf.length() - 1).toString();
  }

  public static void main(String[] argv) {
  }

  public int intVal() {
    return intVal;
  }

  public static final int HOLDEM = 0x6161;

  public boolean isHoldem() {
    return (intVal & HOLDEM) > 0;
  }

  public static final int OMAHA = 0x8686;
  public boolean isOmaha() {
    return (intVal & OMAHA) > 0;
  }

  public static final int STUD = 0x1818;
  public boolean isStud() {
    return (intVal & STUD) > 0;
  }

  public static final int OMAHAHI = 0x282;
  public boolean isOmahaHi() {
    return (intVal & OMAHAHI) > 0;
  }

  public static final int STUDHI = 0x808;
  public boolean isStudHi() {
    return (intVal & STUDHI) > 0;
  }

  public static final int OMAHAHILO = 0x404;
  public boolean isOmahaHiLo() {
    return (intVal & OMAHAHILO) > 0;
  }

  public static final int STUDHILO = 0x1010;
  public boolean isStudHiLo() {
    return (intVal & STUDHILO) > 0;
  }

  public boolean isMTTTourny() {
    return (intVal & 0x20) > 0;
  }

  public boolean isSitnGo(){
    return (intVal & 0xC0) > 0;
  }

  public boolean isPlay() {
    return (intVal & PLAY_POKER) > 0;
  }

  public boolean isBlackjack() {
    return (intVal & BLACKJACK) > 0;
  }

  public boolean isCasino() {
     return (intVal & CASINO) > 0;
   }

  public boolean isReal() {
    return (intVal & REAL_POKER) > 0 || (intVal & BINGO) > 0;
  }

  public boolean equals(GameType g){
    return g.intVal == intVal;
  }

}
